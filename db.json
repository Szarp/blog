{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"source/images/img.jpg","path":"images/img.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"themes/landscape/.git","hash":"e3eb854df688a8490862e53899538731c1c61964","modified":1464643598000},{"_id":"themes/landscape/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1464643598000},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1464643598000},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1464643598000},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1464643598000},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1464643598000},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1464643598000},{"_id":"source/_posts/first-post.md","hash":"d2f446e55898a9abf98b599b09eed139fda0ad02","modified":1464644046000},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1464643589000},{"_id":"source/_posts/post-with-photo.md","hash":"83e6f457f1c070505bbcdfb0305ab5a0e9042ba3","modified":1464711211000},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1464643598000},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1464643598000},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1464643598000},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1464643598000},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1464643598000},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1464643598000},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1464643598000},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1464643598000},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1464643598000},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1464643598000},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1464643598000},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1464643598000},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1464643598000},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1464643598000},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1464643598000},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1464643598000},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1464643598000},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1464643598000},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1464643598000},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1464643598000},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1464643598000},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1464643598000},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1464643598000},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1464643598000},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1464643598000},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1464643598000},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1464643598000},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1464643598000},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1464643598000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1464643598000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1464643598000},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1464643598000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1464643598000},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1464643598000},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1464643598000},{"_id":"source/images/img.JPG","hash":"53a5e7bd58de9caba2acf2fbf3b6a91df7ccdb26","modified":1072908422000},{"_id":"source/_posts/first.md","hash":"7f7be7b0ea3aabd75ca6dd406e77266e238859fc","modified":1464729264000},{"_id":"source/_posts/new-post.md","hash":"5c1606464b62faf81681940e4b481a62cef50b7f","modified":1464732194000},{"_id":"source/_posts/newPost","hash":"fe275a40e424884c3a2c35d3ea49426c7af9ee03","modified":1464732365000},{"_id":"source/images/img.jpg","hash":"53a5e7bd58de9caba2acf2fbf3b6a91df7ccdb26","modified":1072908422000},{"_id":"source/_posts/nowy-post.md","hash":"b1ff39e1d167fafc7eaa520b94d3a554bba3ae19","modified":1464732603000},{"_id":"source/_posts/help.md","hash":"8056406f13e7500b0977e385d75346ed796e8738","modified":1464732397000},{"_id":"source/_posts/hexo-begin.md","hash":"8563697f6cbf3c6ee938ef287e646dae66e10f96","modified":1465403644000},{"_id":"source/_posts/hexo-git-blog.md","hash":"e0027fd9f577dfdc67505f2d1b69b8c2a43f5800","modified":1465403658000},{"_id":"source/_posts/hexo-hosting.md","hash":"09582e73d4a00f175c3c148a361d91c315b8e6b6","modified":1465403733000},{"_id":"source/_posts/hexo-openshift.md","hash":"10991a3bc5926fb610ce4929dd4c2234c01fdab5","modified":1465403850000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2016-05-31T15:57:40.888Z","updated":"2016-05-30T21:26:29.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ciovmo6fs000541kn68327c8b","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"title":"Easy hexo blog","Categories":null,"comments":1,"date":"2016-06-07T22:00:00.000Z","_content":"Easy hexo blog\n### Writing blog \"on\" github \nIf you are hosting your domain, after writing new post you have to upload it. But if it is a blog and everything you publish is public, you can just create a blog repo where you will upload your posts. After that using ```git pull``` on server you will copy all hanges. It makes server administration very easy.\nHow I have made it.\nInstall hexo\n1. hexo init\n3. delete all _git files (like .gitatribute and .git)_\n3. create repo with same name\n4. move from init folder to repo\n\nNow after some changes you have to just use `git pull` on your server (even without restarting it and you will see them)\n","source":"_posts/hexo-git-blog.md","raw":"---\ntitle: Easy hexo blog\ntags:\n - hexo\nCategories:\ncomments: true\ndate: 2016-06-08\n---\nEasy hexo blog\n### Writing blog \"on\" github \nIf you are hosting your domain, after writing new post you have to upload it. But if it is a blog and everything you publish is public, you can just create a blog repo where you will upload your posts. After that using ```git pull``` on server you will copy all hanges. It makes server administration very easy.\nHow I have made it.\nInstall hexo\n1. hexo init\n3. delete all _git files (like .gitatribute and .git)_\n3. create repo with same name\n4. move from init folder to repo\n\nNow after some changes you have to just use `git pull` on your server (even without restarting it and you will see them)\n","slug":"hexo-git-blog","published":1,"updated":"2016-06-08T17:03:21.000Z","_id":"cip73ockf0000eiknpljxvq12","layout":"post","photos":[],"link":"","content":"<p>Easy hexo blog</p>\n<h3 id=\"Writing-blog-“on”-github\"><a href=\"#Writing-blog-“on”-github\" class=\"headerlink\" title=\"Writing blog “on” github\"></a>Writing blog “on” github</h3><p>If you are hosting your domain, after writing new post you have to upload it. But if it is a blog and everything you publish is public, you can just create a blog repo where you will upload your posts. After that using <code>git pull</code> on server you will copy all hanges. It makes server administration very easy.<br>How I have made it.<br>Install hexo</p>\n<ol>\n<li>hexo init</li>\n<li>delete all <em>git files (like .gitatribute and .git)</em></li>\n<li>create repo with same name</li>\n<li>move from init folder to repo</li>\n</ol>\n<p>Now after some changes you have to just use <code>git pull</code> on your server (even without restarting it and you will see them)</p>\n","excerpt":"","more":"<p>Easy hexo blog</p>\n<h3 id=\"Writing-blog-“on”-github\"><a href=\"#Writing-blog-“on”-github\" class=\"headerlink\" title=\"Writing blog “on” github\"></a>Writing blog “on” github</h3><p>If you are hosting your domain, after writing new post you have to upload it. But if it is a blog and everything you publish is public, you can just create a blog repo where you will upload your posts. After that using <code>git pull</code> on server you will copy all hanges. It makes server administration very easy.<br>How I have made it.<br>Install hexo</p>\n<ol>\n<li>hexo init</li>\n<li>delete all <em>git files (like .gitatribute and .git)</em></li>\n<li>create repo with same name</li>\n<li>move from init folder to repo</li>\n</ol>\n<p>Now after some changes you have to just use <code>git pull</code> on your server (even without restarting it and you will see them)</p>\n"},{"title":"Free hosting","Categories":null,"comments":1,"date":"2016-06-07T22:00:00.000Z","_content":"Free hostiong to your servers\n\nIt is available on [openshift](https://openshift.com)\nIf you want to start using it just create accont. When you log in they will guide you.\n","source":"_posts/hexo-hosting.md","raw":"---\ntitle: Free hosting\ntags:\n - openshift\n\nCategories:\ncomments: true\ndate: 2016-06-08\n---\nFree hostiong to your servers\n\nIt is available on [openshift](https://openshift.com)\nIf you want to start using it just create accont. When you log in they will guide you.\n","slug":"hexo-hosting","published":1,"updated":"2016-06-08T17:02:20.000Z","_id":"cip73ockn0001eiknttzov0ih","layout":"post","photos":[],"link":"","content":"<p>Free hostiong to your servers</p>\n<p>It is available on <a href=\"https://openshift.com\" target=\"_blank\" rel=\"external\">openshift</a><br>If you want to start using it just create accont. When you log in they will guide you.</p>\n","excerpt":"","more":"<p>Free hostiong to your servers</p>\n<p>It is available on <a href=\"https://openshift.com\">openshift</a><br>If you want to start using it just create accont. When you log in they will guide you.</p>\n"},{"title":"Introduction to Hexo","Categories":null,"comments":1,"date":"2016-06-07T22:00:00.000Z","_content":"Hexo\nIs a fast, simple and powerful blog framework. You can download it adn run on your own servers and domain. It is pretty easy if u know how to use [node](https://nodejs.org) and [git](https://github.com)\nI didn't have any trouble with instalation, just follow steps on official [hexo's page](https://hexo.io/docs)\nHire you have how to install git and node\n","source":"_posts/hexo-begin.md","raw":"---\ntitle: Introduction to Hexo\ntags:\n - hexo\nCategories:\ncomments: true\ndate: 2016-06-08\n---\nHexo\nIs a fast, simple and powerful blog framework. You can download it adn run on your own servers and domain. It is pretty easy if u know how to use [node](https://nodejs.org) and [git](https://github.com)\nI didn't have any trouble with instalation, just follow steps on official [hexo's page](https://hexo.io/docs)\nHire you have how to install git and node\n","slug":"hexo-begin","published":1,"updated":"2016-06-08T17:02:40.000Z","_id":"cip73ocko0002eiknywlonkph","layout":"post","photos":[],"link":"","content":"<p>Hexo<br>Is a fast, simple and powerful blog framework. You can download it adn run on your own servers and domain. It is pretty easy if u know how to use <a href=\"https://nodejs.org\" target=\"_blank\" rel=\"external\">node</a> and <a href=\"https://github.com\" target=\"_blank\" rel=\"external\">git</a><br>I didn’t have any trouble with instalation, just follow steps on official <a href=\"https://hexo.io/docs\" target=\"_blank\" rel=\"external\">hexo’s page</a><br>Hire you have how to install git and node</p>\n","excerpt":"","more":"<p>Hexo<br>Is a fast, simple and powerful blog framework. You can download it adn run on your own servers and domain. It is pretty easy if u know how to use <a href=\"https://nodejs.org\">node</a> and <a href=\"https://github.com\">git</a><br>I didn’t have any trouble with instalation, just follow steps on official <a href=\"https://hexo.io/docs\">hexo’s page</a><br>Hire you have how to install git and node</p>\n"},{"title":"Connect hexo and Openshift","Categories":null,"comments":1,"date":"2016-06-07T22:00:00.000Z","_content":"Connect hexo and openshift\n\nIt isn't very hard. You just start application with node, then `npm install hexo-cli` and `hexo start` but on hexo start Hard time begins. You can't just run your server. There are problems with ip and port address. I found two commands which u have to join to your `../node_modules/hexo-server/index.js` file so it should looks like:\n\n``` javascript\n'use strict';\nvar PORT = process.env.OPENSHIFT_NODEJS_PORT || 8080;\nvar IPADDRESS = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\nvar assign = require('object-assign');\n\nhexo.config.server = assign({\n  port: PORT,\n  log: false,\n  ip: IPADDRESS,\n  compress: false,\n  header: true\n}, hexo.config.server);\n\nhexo.extend.console.register('server', 'Start the server.', {\n  desc: 'Start the server and watch for file changes.',\n  \n...\n```\n  It is first step, then you have to turn of your running node server. Just kill this process.\n  I did it:\n``` bash\n$ ps aux \n```\nFind pid of your node server and then:\n``` bash\n$ pkill <PID>\n```\nAnd run server\n``` bash\n$ hexo server\n```","source":"_posts/hexo-openshift.md","raw":"---\ntitle: Connect hexo and Openshift\ntags:\n - hexo\n - openshift\nCategories:\ncomments: true\ndate: 2016-06-08\n\n---\nConnect hexo and openshift\n\nIt isn't very hard. You just start application with node, then `npm install hexo-cli` and `hexo start` but on hexo start Hard time begins. You can't just run your server. There are problems with ip and port address. I found two commands which u have to join to your `../node_modules/hexo-server/index.js` file so it should looks like:\n\n``` javascript\n'use strict';\nvar PORT = process.env.OPENSHIFT_NODEJS_PORT || 8080;\nvar IPADDRESS = process.env.OPENSHIFT_NODEJS_IP || '127.0.0.1';\nvar assign = require('object-assign');\n\nhexo.config.server = assign({\n  port: PORT,\n  log: false,\n  ip: IPADDRESS,\n  compress: false,\n  header: true\n}, hexo.config.server);\n\nhexo.extend.console.register('server', 'Start the server.', {\n  desc: 'Start the server and watch for file changes.',\n  \n...\n```\n  It is first step, then you have to turn of your running node server. Just kill this process.\n  I did it:\n``` bash\n$ ps aux \n```\nFind pid of your node server and then:\n``` bash\n$ pkill <PID>\n```\nAnd run server\n``` bash\n$ hexo server\n```","slug":"hexo-openshift","published":1,"updated":"2016-06-08T17:02:52.000Z","_id":"cip73ockq0003eiknkd718noe","layout":"post","photos":[],"link":"","content":"<p>Connect hexo and openshift</p>\n<p>It isn’t very hard. You just start application with node, then <code>npm install hexo-cli</code> and <code>hexo start</code> but on hexo start Hard time begins. You can’t just run your server. There are problems with ip and port address. I found two commands which u have to join to your <code>../node_modules/hexo-server/index.js</code> file so it should looks like:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> PORT = process.env.OPENSHIFT_NODEJS_PORT || <span class=\"number\">8080</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> IPADDRESS = process.env.OPENSHIFT_NODEJS_IP || <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> assign = <span class=\"built_in\">require</span>(<span class=\"string\">'object-assign'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.config.server = assign(&#123;</span><br><span class=\"line\">  port: PORT,</span><br><span class=\"line\">  log: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  ip: IPADDRESS,</span><br><span class=\"line\">  compress: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  header: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;, hexo.config.server);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.console.register(<span class=\"string\">'server'</span>, <span class=\"string\">'Start the server.'</span>, &#123;</span><br><span class=\"line\">  desc: <span class=\"string\">'Start the server and watch for file changes.'</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>  It is first step, then you have to turn of your running node server. Just kill this process.<br>  I did it:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ps aux</span><br></pre></td></tr></table></figure></p>\n<p>Find pid of your node server and then:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pkill &lt;PID&gt;</span><br></pre></td></tr></table></figure></p>\n<p>And run server<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n","excerpt":"","more":"<p>Connect hexo and openshift</p>\n<p>It isn’t very hard. You just start application with node, then <code>npm install hexo-cli</code> and <code>hexo start</code> but on hexo start Hard time begins. You can’t just run your server. There are problems with ip and port address. I found two commands which u have to join to your <code>../node_modules/hexo-server/index.js</code> file so it should looks like:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">'use strict'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> PORT = process.env.OPENSHIFT_NODEJS_PORT || <span class=\"number\">8080</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> IPADDRESS = process.env.OPENSHIFT_NODEJS_IP || <span class=\"string\">'127.0.0.1'</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> assign = <span class=\"built_in\">require</span>(<span class=\"string\">'object-assign'</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.config.server = assign(&#123;</span><br><span class=\"line\">  port: PORT,</span><br><span class=\"line\">  log: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  ip: IPADDRESS,</span><br><span class=\"line\">  compress: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  header: <span class=\"literal\">true</span></span><br><span class=\"line\">&#125;, hexo.config.server);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.extend.console.register(<span class=\"string\">'server'</span>, <span class=\"string\">'Start the server.'</span>, &#123;</span><br><span class=\"line\">  desc: <span class=\"string\">'Start the server and watch for file changes.'</span>,</span><br><span class=\"line\">  </span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n<p>  It is first step, then you have to turn of your running node server. Just kill this process.<br>  I did it:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ ps aux</span><br></pre></td></tr></table></figure></p>\n<p>Find pid of your node server and then:<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ pkill &lt;PID&gt;</span><br></pre></td></tr></table></figure></p>\n<p>And run server<br><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure></p>\n"},{"title":"Communication between Arduino","Categories":null,"comments":1,"date":"2016-05-31T22:00:00.000Z","_content":"\nIf you want to send data between Arduino boards you can do this following this simple method.\n\n### To do this you'll need:\n* Arduino (which send data) with free *PWM* pin (pin marked with '~' symbol)\n* Arduino (which read data) with free analog pin (pin starting with A letter)\n* few wires\n* 1 capacitor\n* 1 resistor\n\n### How to make it\n#### Connecting\nYou need to connect *PWM* pin in first Arduino to capacitor through resistor. Then connect capacitor to analog pin in second Arduino.\n\n**If resistor or capacitor is too small or too big results will be very inaccurate.**\n#### Sending data\nOn first Arduino you need to scale data you want to send, because *PWM* sends 0-5V signal, but you send value from 0 (0V) to 255 (5V).\n#### Reading data\nThen on second Arduino you need to read voltage on analog pin and scale it again, because it reads values from 0 to 1023\n(if you divide voltage you got by 8, it'll be ~~the same~~ close to the value you sent).\nWe also advice you to use moving average when reading data, if you'll send data with small diferences.\nSimple moving average looks like this:\n```\nfloat newData=lastData*5/10+sensorValue*5/10;\n```\nWhere `lastData` is data you have recieved earlier and `sensorValue` is the value you just got.\n\n**Remember that it isn't very accurate.**\n","source":"_posts/Communication-between-Arduino.md","raw":"---\ntitle: Communication between Arduino\ntags:\n  - arduino\n  - comunication\nCategories:\ncomments: true\ndate: 2016-06-01 \n---\n\nIf you want to send data between Arduino boards you can do this following this simple method.\n\n### To do this you'll need:\n* Arduino (which send data) with free *PWM* pin (pin marked with '~' symbol)\n* Arduino (which read data) with free analog pin (pin starting with A letter)\n* few wires\n* 1 capacitor\n* 1 resistor\n\n### How to make it\n#### Connecting\nYou need to connect *PWM* pin in first Arduino to capacitor through resistor. Then connect capacitor to analog pin in second Arduino.\n\n**If resistor or capacitor is too small or too big results will be very inaccurate.**\n#### Sending data\nOn first Arduino you need to scale data you want to send, because *PWM* sends 0-5V signal, but you send value from 0 (0V) to 255 (5V).\n#### Reading data\nThen on second Arduino you need to read voltage on analog pin and scale it again, because it reads values from 0 to 1023\n(if you divide voltage you got by 8, it'll be ~~the same~~ close to the value you sent).\nWe also advice you to use moving average when reading data, if you'll send data with small diferences.\nSimple moving average looks like this:\n```\nfloat newData=lastData*5/10+sensorValue*5/10;\n```\nWhere `lastData` is data you have recieved earlier and `sensorValue` is the value you just got.\n\n**Remember that it isn't very accurate.**\n","slug":"Communication-between-Arduino","published":1,"updated":"2016-06-08T17:10:45.000Z","_id":"cip74ozsn000ieiknv4dwfill","layout":"post","photos":[],"link":"","content":"<p>If you want to send data between Arduino boards you can do this following this simple method.</p>\n<h3 id=\"To-do-this-you’ll-need\"><a href=\"#To-do-this-you’ll-need\" class=\"headerlink\" title=\"To do this you’ll need:\"></a>To do this you’ll need:</h3><ul>\n<li>Arduino (which send data) with free <em>PWM</em> pin (pin marked with ‘~’ symbol)</li>\n<li>Arduino (which read data) with free analog pin (pin starting with A letter)</li>\n<li>few wires</li>\n<li>1 capacitor</li>\n<li>1 resistor</li>\n</ul>\n<h3 id=\"How-to-make-it\"><a href=\"#How-to-make-it\" class=\"headerlink\" title=\"How to make it\"></a>How to make it</h3><h4 id=\"Connecting\"><a href=\"#Connecting\" class=\"headerlink\" title=\"Connecting\"></a>Connecting</h4><p>You need to connect <em>PWM</em> pin in first Arduino to capacitor through resistor. Then connect capacitor to analog pin in second Arduino.</p>\n<p><strong>If resistor or capacitor is too small or too big results will be very inaccurate.</strong></p>\n<h4 id=\"Sending-data\"><a href=\"#Sending-data\" class=\"headerlink\" title=\"Sending data\"></a>Sending data</h4><p>On first Arduino you need to scale data you want to send, because <em>PWM</em> sends 0-5V signal, but you send value from 0 (0V) to 255 (5V).</p>\n<h4 id=\"Reading-data\"><a href=\"#Reading-data\" class=\"headerlink\" title=\"Reading data\"></a>Reading data</h4><p>Then on second Arduino you need to read voltage on analog pin and scale it again, because it reads values from 0 to 1023<br>(if you divide voltage you got by 8, it’ll be <del>the same</del> close to the value you sent).<br>We also advice you to use moving average when reading data, if you’ll send data with small diferences.<br>Simple moving average looks like this:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">float newData=lastData*5/10+sensorValue*5/10;</span><br></pre></td></tr></table></figure></p>\n<p>Where <code>lastData</code> is data you have recieved earlier and <code>sensorValue</code> is the value you just got.</p>\n<p><strong>Remember that it isn’t very accurate.</strong></p>\n","excerpt":"","more":"<p>If you want to send data between Arduino boards you can do this following this simple method.</p>\n<h3 id=\"To-do-this-you’ll-need\"><a href=\"#To-do-this-you’ll-need\" class=\"headerlink\" title=\"To do this you’ll need:\"></a>To do this you’ll need:</h3><ul>\n<li>Arduino (which send data) with free <em>PWM</em> pin (pin marked with ‘~’ symbol)</li>\n<li>Arduino (which read data) with free analog pin (pin starting with A letter)</li>\n<li>few wires</li>\n<li>1 capacitor</li>\n<li>1 resistor</li>\n</ul>\n<h3 id=\"How-to-make-it\"><a href=\"#How-to-make-it\" class=\"headerlink\" title=\"How to make it\"></a>How to make it</h3><h4 id=\"Connecting\"><a href=\"#Connecting\" class=\"headerlink\" title=\"Connecting\"></a>Connecting</h4><p>You need to connect <em>PWM</em> pin in first Arduino to capacitor through resistor. Then connect capacitor to analog pin in second Arduino.</p>\n<p><strong>If resistor or capacitor is too small or too big results will be very inaccurate.</strong></p>\n<h4 id=\"Sending-data\"><a href=\"#Sending-data\" class=\"headerlink\" title=\"Sending data\"></a>Sending data</h4><p>On first Arduino you need to scale data you want to send, because <em>PWM</em> sends 0-5V signal, but you send value from 0 (0V) to 255 (5V).</p>\n<h4 id=\"Reading-data\"><a href=\"#Reading-data\" class=\"headerlink\" title=\"Reading data\"></a>Reading data</h4><p>Then on second Arduino you need to read voltage on analog pin and scale it again, because it reads values from 0 to 1023<br>(if you divide voltage you got by 8, it’ll be <del>the same</del> close to the value you sent).<br>We also advice you to use moving average when reading data, if you’ll send data with small diferences.<br>Simple moving average looks like this:<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">float newData=lastData*5/10+sensorValue*5/10;</span><br></pre></td></tr></table></figure></p>\n<p>Where <code>lastData</code> is data you have recieved earlier and <code>sensorValue</code> is the value you just got.</p>\n<p><strong>Remember that it isn’t very accurate.</strong></p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cip73ockn0001eiknttzov0ih","tag_id":"cip74i56i0004eiknq34jsobq","_id":"cip74i56k0005eikns0reau0o"},{"post_id":"cip73ocko0002eiknywlonkph","tag_id":"cip74ikxs0008eikn8y6jgkct","_id":"cip74ikxu0009eiknm2qp0wze"},{"post_id":"cip73ockq0003eiknkd718noe","tag_id":"cip74ikxs0008eikn8y6jgkct","_id":"cip74itre000aeikn2b5z92zv"},{"post_id":"cip73ockq0003eiknkd718noe","tag_id":"cip74i56i0004eiknq34jsobq","_id":"cip74itre000beikncq8soioz"},{"post_id":"cip73ockf0000eiknpljxvq12","tag_id":"cip74ikxs0008eikn8y6jgkct","_id":"cip74ja4q000ceiknhe0qhc7k"},{"post_id":"cip74ozsn000ieiknv4dwfill","tag_id":"cip74m4cf000eeiknn71xa7od","_id":"cip74ozst000jeiknau5yn9xn"},{"post_id":"cip74ozsn000ieiknv4dwfill","tag_id":"cip74m4cg000feiknzi80ouz7","_id":"cip74ozst000keiknu6qjcws5"}],"Tag":[{"name":"test","_id":"ciovmo6fp000141kn7wt1tknq"},{"name":"blog","_id":"ciovmo6fr000241kncmyxribc"},{"name":"images","_id":"ciovmo6fv000741kng7x4gm1x"},{"name":"fun","_id":"ciovztb150001w0knd3bav040"},{"name":"openshift","_id":"cip74i56i0004eiknq34jsobq"},{"name":"tag","_id":"cip74id3h0006eiknfy94bjxs"},{"name":"hexo","_id":"cip74ikxs0008eikn8y6jgkct"},{"name":"arduino","_id":"cip74m4cf000eeiknn71xa7od"},{"name":"comunication","_id":"cip74m4cg000feiknzi80ouz7"}]}}